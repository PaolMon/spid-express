version: "2.2"

services:
  
  spid-express-app:
    container_name: spid-express-app
    image: spid-express-app:latest
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=dev
      - REDIS_URL=redis://redis
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    expose:
      - "3000"
    ports:
      - "3000:3000"
    networks:
      - spid-express-app

  redis:
    container_name: redis
    image: wodby/redis:3.2-2.1.5
    environment:
      REDIS_TIMEOUT: 300
      REDIS_TCP_KEEPALIVE: 60
      REDIS_MAXMEMORY: 182m
    networks:
      - spid-express-app

  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: unless-stopped
    networks:
      - certnet
      - spid-express-app
    ports: 
      - 80:80
      - 443:443
    volumes: 
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: 
      "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"    

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    networks:
      - certnet
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: 
      "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

        

# needed to make TSL work
networks:
  spid-express-app:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  
  certnet:
